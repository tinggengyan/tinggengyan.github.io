<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Documentation - Tag - Tinggeng</title>
        <link>https://tinggengyan.github.io/tags/documentation/</link>
        <description>Documentation - Tag - Tinggeng</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tinggengyan@gmail.com (Tinggeng)</managingEditor>
            <webMaster>tinggengyan@gmail.com (Tinggeng)</webMaster><lastBuildDate>Sun, 03 Oct 2021 10:25:55 &#43;0000</lastBuildDate><atom:link href="https://tinggengyan.github.io/tags/documentation/" rel="self" type="application/rss+xml" /><item>
    <title>文档系统_程序员如何写好文档 (The documentation system)</title>
    <link>https://tinggengyan.github.io/2021/10/the-documentation-system_how_to_write_good_document/</link>
    <pubDate>Sun, 03 Oct 2021 10:25:55 &#43;0000</pubDate>
    <author>Tinggeng</author>
    <guid>https://tinggengyan.github.io/2021/10/the-documentation-system_how_to_write_good_document/</guid>
    <description><![CDATA[背景 文档是日常开发过程中非常重要的记录和交流的工具,也是学习新技术必然要阅读的材料.学习技术的时候,都会建议直接看官方文档,不同的技术网站,会看到 Guide,Tutorial,Wiki,Reference 等分类(也可能只包含其中一个或者几个). 我之前就一直对这几个英文单词有疑问,尤其是我在看 Android 开发者官网的时候,不明白每个分类的依据,间接导致,自己也没有学会如何写文档.后来发现了这篇文章,读完觉得很有道理. The documentation system ,窃以为非常好,值得我进行模仿学习.
以下的内容会进行自我理解的翻译,有意无意的删除一些冗余的修辞,如有幸被网上邻居搜到,建议看原文,非常简单.
Summary 为了编写良好的软件文档,需要说一个秘密: 没有一个名为文档的东西,文档应该是四样东西的集合.
这四样分别是是：tutorials(教程),how-to guides(如何做的引导),technical reference (技术参考),explanation(解释). 它们代表四种不同的目的或职能,并且这四种的写作方式都有差异.了解了这些差异,通常能巨大的提高文档的质量.
关于即将描述的文档系统 这里的文档系统是非常简单的,近乎于全面适用行业内的方案.行文有个承诺: 如果将这些原则在实践中进行应用,将极大的提高写作文档的质量.
有很多公司/组织/开源项目采用了本文所述的方案,详细见链接采用本方案的项目 Introduction 问题和解决方案 需要解决的问题 如果文档不够好,产品再好,人们也不会使用它.即使人们必须使用它,那也是因为他们别无选择,没有良好的文档,人们无法如你期望的那样使用你开发的产品.
当然了,每个人都知道文档的重要性,每个人也都尝试去写好文档,最终也都失败了.
这也不是写作的人不够努力,通常是他们没有按照正确的方式去做而已.
本文介绍的文档系统,不是为了让你更加努力的工作,而是让你写作的文档更好,使用正确的方式进行写作,让文档更加易懂,更加容易维护: The right way is the easier way.
文档系统的秘密 有一个不应该是秘密的秘密: 文档应该围绕四种不能的功能目的进行构造: tutorials(教程),how-to guides(如何做的引导),technical reference (技术参考),explanation(解释).每一种都需要有独立的写作模式. 软件的使用者在不同的情况下,需要不同的文档,故而,大部分的软件,对于这四种文档,都需要包含.
文档将围绕这四种进行构建,并且四种文档需要独立的创建.
Tutorials(教程) How-to guides(如何做的引导) Reference(技术参考) Explanation(解释) oriented to(面向的/目的/导向) 学习 有一个固定的目标 传达信息 为了更深的理解 must (必须做到) 让一个初学者上手 演示如何解决一个特定的问题 描述技术的内部参数等 深层次的解释 its form(形式) 一节课 一些列的步骤 纯粹的描述 用文字进行阐述说明 analogy(类比) 教一个孩子如何进行烹饪 烹饪中的食谱 百科全书里的文章 关于烹饪的历史书 如上这种划分,可以让作者清楚写什么内容,写在哪儿,如何写; 读者清楚去哪找想要的内容.]]></description>
</item>
</channel>
</rss>
